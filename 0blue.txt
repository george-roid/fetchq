window.stopZeroCounter = false; // Set to true to stop at any time

let textarea = document.getElementById('zeroGuyLinksTextarea');
if (!textarea) {
    textarea = document.createElement('textarea');
    textarea.id = 'zeroGuyLinksTextarea';
    textarea.style.position = 'fixed';
    textarea.style.bottom = '10px';
    textarea.style.left = '10px';
    textarea.style.width = '400px';
    textarea.style.height = '200px';
    textarea.style.zIndex = 99999;
    textarea.style.background = '#fff';
    textarea.style.fontSize = '12px';
    textarea.style.border = '2px solid #333';
    textarea.style.padding = '8px';
    textarea.readOnly = false;
    document.body.appendChild(textarea);
}

async function collectAnonZeroGuyLinks(maxLinks = 1000, scrollDelay = 300) {
    let anonGuyLinks = new Set();
    let lastHeight = 0;
    let attemptsWithoutNew = 0;

    console.log("Started collecting. Set window.stopZeroCounter = true in the console to stop at any time.");

    while (anonGuyLinks.size < maxLinks && attemptsWithoutNew < 10 && !window.stopZeroCounter) {
        let foundThisRound = 0;
        let questions = Array.from(document.querySelectorAll('div.question.result-row'));
        for (let q of questions) {
            if (window.stopZeroCounter) break;

            let guyA = q.querySelector('a[href*="#guys"]');
            if (guyA) {
                let guyCounter = guyA.querySelector('.guycounter');
                if (guyCounter && guyCounter.textContent.trim() === "0") {
                    // Open Add Opinion box if not already open
                    let qid = q.getAttribute("data-ga-label");
                    let formSection = q.querySelector(`.post-section.q${qid}`);
                    if (formSection && formSection.classList.contains("hidden")) {
                        let trigger = q.querySelector(`.opinion-trigger.q${qid}`);
                        if (trigger) trigger.click();
                        await new Promise(res => setTimeout(res, 200));
                    }
                    // Check for anonymous checkbox
                    let anonCheckbox = q.querySelector('input[name="IsAnonymous"]');
                    if (anonCheckbox) {
                        let link = guyA.href.replace(/#guys$/, '');
                        if (!anonGuyLinks.has(link)) {
                            anonGuyLinks.add(link);
                            foundThisRound++;
                        }
                    }
                }
            }
        }

        textarea.value = Array.from(anonGuyLinks).join('\n');

        if (foundThisRound > 0) {
            console.log(`[${anonGuyLinks.size}] links collected so far... (+${foundThisRound} new)`);
        } else {
            console.log(`[${anonGuyLinks.size}] links collected so far...`);
        }

        window.scrollTo(0, document.body.scrollHeight);
        await new Promise(res => setTimeout(res, scrollDelay));

        let newHeight = document.body.scrollHeight;
        if (newHeight === lastHeight) {
            attemptsWithoutNew++;
        } else {
            attemptsWithoutNew = 0;
            lastHeight = newHeight;
        }
    }

    let result = Array.from(anonGuyLinks).slice(0, maxLinks);
    window.latestAnonGuyLinks = result;
    textarea.value = result.join('\n');
    console.log(`Done! Collected ${result.length} links. You can copy them from the textarea on the page.`);
    return result;
}

// Usage:
collectAnonZeroGuyLinks(1000, 300);
